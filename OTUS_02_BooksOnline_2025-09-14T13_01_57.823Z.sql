CREATE TABLE `CustomerCart` (
	`CartRow` INTEGER NOT NULL AUTO_INCREMENT,
	`CustomerID` INTEGER NOT NULL,
	`BookEditionID` INTEGER NOT NULL,
	`BookCount` INTEGER NOT NULL CHECK(`BookCount` > 0),
	`AddingDate` DATETIME NOT NULL,
	PRIMARY KEY(`CartRow`)
);


CREATE INDEX `CustomerCart_CustomerID`
ON `CustomerCart` (`CustomerID`);
CREATE TABLE `Books` (
	`BookID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`BookName` VARCHAR(255) NOT NULL,
	`CategoryID` INTEGER NOT NULL,
	PRIMARY KEY(`BookID`)
);


CREATE INDEX `Books_BookName`
ON `Books` (`BookName`);
CREATE TABLE `Authors` (
	`AuthorID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`AuthorName` VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(`AuthorID`)
);


CREATE INDEX `Authors_AuthorName`
ON `Authors` (`AuthorName`);
CREATE TABLE `BooksAuthors` (
	`BookID` INTEGER NOT NULL UNIQUE,
	`AuthorID` INTEGER NOT NULL,
	PRIMARY KEY(`BookID`, `AuthorID`)
);


CREATE TABLE `Categories` (
	`CategoryID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`CategoryName` VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(`CategoryID`)
);


CREATE TABLE `Publishers` (
	`PublisherID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`PublisherName` VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(`PublisherID`)
);


CREATE TABLE `BookEditions` (
	`BookEditionID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`Year` INTEGER NOT NULL CHECK(`Year` > 1900),
	`PublisherID` INTEGER NOT NULL,
	`BookID` INTEGER NOT NULL,
	PRIMARY KEY(`BookEditionID`)
);


CREATE TABLE `Suppliers` (
	`SupplierID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`TIN` INTEGER NOT NULL,
	`SupplierName` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`SupplierID`)
) COMMENT='ИНН';


CREATE TABLE `Supplies` (
	`SupplyID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`SupplierID` INTEGER NOT NULL,
	`BookEditionID` INTEGER NOT NULL,
	`BookCount` INTEGER NOT NULL CHECK(`BookCount` > 0),
	`BookCost` DECIMAL NOT NULL CHECK(`BookCost` > 0),
	`WarehouseID` INTEGER NOT NULL,
	PRIMARY KEY(`SupplyID`)
);


CREATE TABLE `Warehouses` (
	`WarehouseID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`WarehouseName` VARCHAR(255) NOT NULL,
	`WarehouseAddress` VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(`WarehouseID`)
);


CREATE TABLE `BookPrices` (
	`PriceID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`BookEditionID` INTEGER NOT NULL,
	`Price` DECIMAL NOT NULL CHECK(`Price` > 0),
	`PriceStartDate` DATE NOT NULL,
	`PriceEndDate` DATE,
	`IsActualPrice` BOOLEAN NOT NULL,
	PRIMARY KEY(`PriceID`)
);


CREATE TABLE `Orders` (
	`OrderID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`OrderDate` DATE NOT NULL,
	`CustomerID` INTEGER NOT NULL,
	`PickupLocationID` INTEGER NOT NULL,
	`TotalSum` DECIMAL NOT NULL,
	`StatusID` INTEGER NOT NULL,
	`PromocodeID` INTEGER,
	PRIMARY KEY(`OrderID`)
);


CREATE INDEX `Orders_CustomerStatus`
ON `Orders` (`CustomerID`, `StatusID`);
CREATE TABLE `PickupLocations` (
	`PickupLocationID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`PickupLocationAddress` VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(`PickupLocationID`)
);


CREATE INDEX `PickupLocations_PickupLocationAddress`
ON `PickupLocations` (`PickupLocationAddress`);
CREATE TABLE `Customers` (
	`CustomerID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`FirstName` VARCHAR(255) NOT NULL,
	`LastName` VARCHAR(255) NOT NULL,
	`Email` VARCHAR(255) NOT NULL UNIQUE,
	`PhoneNumber` INTEGER NOT NULL UNIQUE,
	PRIMARY KEY(`CustomerID`)
);


CREATE TABLE `CustomerDocuments` (
	`DocumentID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`DocumentTypeID` INTEGER NOT NULL,
	`DocumentDate` DATE NOT NULL,
	`DocumentNumber` INTEGER NOT NULL,
	`CustomerID` INTEGER NOT NULL,
	PRIMARY KEY(`DocumentID`)
);


CREATE INDEX `CustomerDocuments_DocumentNumber`
ON `CustomerDocuments` (`DocumentNumber`);
CREATE TABLE `DocumentTypes` (
	`DocumentTypeID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`DocumentType` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`DocumentTypeID`)
);


CREATE TABLE `OrderContent` (
	`OrderRow` INTEGER NOT NULL UNIQUE,
	`OrderID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`BookEditionID` INTEGER NOT NULL,
	`WarehouseID` INTEGER NOT NULL,
	`BookCount` INTEGER NOT NULL CHECK(`BookCount` > 0),
	`PriceID` INTEGER NOT NULL,
	`DiscountPercent` DECIMAL NOT NULL CHECK(`DiscountPercent` >= 0),
	PRIMARY KEY(`OrderRow`)
);


CREATE TABLE `Statuses` (
	`StatusID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`StatusName` VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY(`StatusID`)
);


CREATE TABLE `Promocodes` (
	`PromocodeID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`Promocode` VARCHAR(255) NOT NULL UNIQUE,
	`DiscountPercent` DECIMAL NOT NULL,
	PRIMARY KEY(`PromocodeID`)
);


ALTER TABLE `Books`
ADD FOREIGN KEY(`BookID`) REFERENCES `BooksAuthors`(`BookID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Authors`
ADD FOREIGN KEY(`AuthorID`) REFERENCES `BooksAuthors`(`AuthorID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Books`
ADD FOREIGN KEY(`CategoryID`) REFERENCES `Categories`(`CategoryID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Books`
ADD FOREIGN KEY(`BookID`) REFERENCES `BookEditions`(`BookID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `BookEditions`
ADD FOREIGN KEY(`PublisherID`) REFERENCES `Publishers`(`PublisherID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Supplies`
ADD FOREIGN KEY(`WarehouseID`) REFERENCES `Warehouses`(`WarehouseID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Suppliers`
ADD FOREIGN KEY(`SupplierID`) REFERENCES `Supplies`(`SupplierID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `BookEditions`
ADD FOREIGN KEY(`BookEditionID`) REFERENCES `Supplies`(`BookEditionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `BookEditions`
ADD FOREIGN KEY(`BookEditionID`) REFERENCES `BookPrices`(`BookEditionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `PickupLocations`
ADD FOREIGN KEY(`PickupLocationID`) REFERENCES `Orders`(`PickupLocationID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Customers`
ADD FOREIGN KEY(`CustomerID`) REFERENCES `Orders`(`CustomerID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `DocumentTypes`
ADD FOREIGN KEY(`DocumentTypeID`) REFERENCES `CustomerDocuments`(`DocumentTypeID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Orders`
ADD FOREIGN KEY(`StatusID`) REFERENCES `Statuses`(`StatusID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Customers`
ADD FOREIGN KEY(`CustomerID`) REFERENCES `CustomerDocuments`(`CustomerID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `OrderContent`
ADD FOREIGN KEY(`OrderID`) REFERENCES `Orders`(`OrderID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `BookEditions`
ADD FOREIGN KEY(`BookEditionID`) REFERENCES `OrderContent`(`BookEditionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `OrderContent`
ADD FOREIGN KEY(`WarehouseID`) REFERENCES `Warehouses`(`WarehouseID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `BookPrices`
ADD FOREIGN KEY(`PriceID`) REFERENCES `OrderContent`(`PriceID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Orders`
ADD FOREIGN KEY(`PromocodeID`) REFERENCES `Promocodes`(`PromocodeID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `CustomerCart`
ADD FOREIGN KEY(`CustomerID`) REFERENCES `Customers`(`CustomerID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `CustomerCart`
ADD FOREIGN KEY(`BookEditionID`) REFERENCES `BookEditions`(`BookEditionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;